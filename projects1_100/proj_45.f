c-------------------------------------------------------------------------------------------------c
      program project_euler_45
c-------------------------------------------------------------------------------------------------c
c                                                                                                 c
c  Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:           c
c  Triangle 	  	Tn = n(n+1)/2 	  	1, 3, 6, 10, 15, ...                                        c
c  Pentagonal 	  Pn = n(3n−1)/2 	  	1, 5, 12, 22, 35, ...                                       c
c  Hexagonal 	  	Hn = n(2n−1) 	  	1, 6, 15, 28, 45, ...                                         c
c                                                                                                 c
c  It can be verified that T(285) = P(165) = H(143) = 40755.                                      c
c                                                                                                 c
c-------------------------------------------------------------------------------------------------c
      implicit none
      include 'euler.inc'
      
      integer*8 tri_index, pent_index, hex_index
      logical found_result
      
c initialize the logical variable
      found_result = .false.
      tri_index = 285
      
      do while(.not.(found_result))
        tri_index = tri_index + 1
        pent_index = 166
        
        do while(pentagonal(pent_index).lt.triangle(tri_index))
          pent_index = pent_index + 1
        enddo
        
        if (pentagonal(pent_index).eq.triangle(tri_index)) then
          hex_index = 144
          
          do while(hexagonal(hex_index).lt.triangle(tri_index))
            hex_index = hex_index + 1
          enddo
          
          if (hexagonal(hex_index).eq.triangle(tri_index)) then
            found_result = .true.
          endif
        endif
      enddo
      
      write(*,*) 'Triangle(',tri_index,') = ',triangle(tri_index)
      write(*,*) 'Pentagonal(',pent_index,') = ',pentagonal(pent_index)
      write(*,*) 'Hexagonal(',hex_index,') = ',hexagonal(hex_index)
      
      end