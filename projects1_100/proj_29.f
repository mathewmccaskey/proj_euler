c-------------------------------------------------------------------------------------------------c
      program project_euler_29
c-------------------------------------------------------------------------------------------------c
c                                                                                                 c
c  Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:                           c
c                                                                                                 c
c     2^2=4, 2^3=8, 2^4=16, 2^5=32                                                                c
c     3^2=9, 3^3=27, 3^4=81, 3^5=243                                                              c
c     4^2=16, 4^3=64, 4^4=256, 4^5=1024                                                           c
c     5^2=25, 5^3=125, 5^4=625, 5^5=3125                                                          c
c                                                                                                 c
c  If they are then placed in numerical order, with any repeats removed, we get the following     c
c  sequence of 15 distinct terms:                                                                 c
c                                                                                                 c
c  4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125                                c
c                                                                                                 c
c  How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?   c
c                                                                                                 c
c-------------------------------------------------------------------------------------------------c
      implicit none
      include 'euler.inc'
      
c parameters used in this program only
      integer*8 num_terms, prime_list(25), powers(10000,25), n_primes, x1_primes(1000), x1_power(1000)
      integer*8 test_prime(25)
      logical unique, unique_test
      
c initialize the number of unique terms
      num_terms = 0
      x2 = 0
      do x1=2,100
        if (is_prime(x1)) then
          x2 = x2 + 1
          prime_list(x2) = x1
        endif
      enddo
      
c loop over all the base numbers
      do x1=2,100

c reset the parameters that go into get_prime_factors
        do x2=1,n_primes
          x1_primes = 0
          x1_power = 0
        enddo
        n_primes = 0

        call get_prime_factors(x1,n_primes,x1_primes,x1_power)
c        write(*,*) x1,x1_primes(1),x1_power(1)
        do x2=1,25
          test_prime(x2) = 0
        enddo

c use the results from get_prime_factors and put it in the form we need        
        do x2=1,n_primes
          do x3=1,25
            if (x1_primes(x2).eq.prime_list(x3)) then
              test_prime(x3) = x1_power(x2)
            endif
          enddo
        enddo
        
c loop over all the powers and see if they are unique
        do x2=2,100
          unique = .true.
          do x3=1,num_terms
            unique_test = .false.
            do x4=1,25
              if (powers(x3,x4) .ne. test_prime(x4)*x2) unique_test = .true.
            enddo
            
            if (.not.(unique_test)) then
              unique = .false.
              exit
            endif
          enddo
          
          if (unique) then
            num_terms = num_terms + 1
            do x3=1,25
              powers(num_terms,x3) = test_prime(x3)*x2
            enddo
c            write(*,fmt='(5(I3))') (test_prime(x3)*x2, x3=1,5)
          endif
        enddo
      enddo
        
      write(*,*) 'The number of unique terms is ',num_terms
        
      end